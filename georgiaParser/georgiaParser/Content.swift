//
//  Content.swift
//  georgiaParser
//
//  Created by Худышка К on 07.03.2023.
//

import Foundation

final class Content {
    
    static let shared = Content()
    
    let epicks: [Epic] = [
        Epic(number: 0, russName: "Перекресток", arrayNumbers: [1, 5, 6, 7, 13, 16, 17, 20, 26, 29, 41, 42, 47, 48, 49, 50, 53, 54, 65, 66, 68, 69, 73, 76, 78, 80, 81, 88, 89, 92, 96, 113, 114, 119, 120, 128, 134, 171, 504, 511, 512, 963, 1025, 1250, 1275, 1698]),
        Epic(number: 1, russName: "Движение, маневрирование, ходовая часть", arrayNumbers: [2, 10, 24, 27, 52, 91, 97, 121, 137, 138, 230, 297, 303, 351, 359, 360, 361, 367, 369, 371, 374, 376, 383, 384, 385, 386, 388, 392, 394, 396, 397, 398, 402, 404, 405, 406, 407, 408, 409, 433, 435, 439, 441, 449, 455, 462, 464, 468, 481, 483, 489, 544, 941, 942, 947, 950, 951, 1048, 1334, 1430]),
        Epic(number: 2, russName: "Сигналы светофора", arrayNumbers: [4, 14, 21, 23, 63, 75, 102, 105, 106, 107, 108, 109, 110, 115, 116, 118, 126, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 157, 158, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 327, 389, 477, 480, 1252, 1276, 1278, 1649]),
        Epic(number: 3, russName: "Дорожная безопасность", arrayNumbers: [9, 11, 25, 31, 40, 43, 56, 57, 58, 67, 93, 122, 219, 272, 293, 382, 582, 801, 802, 804, 805, 818, 819, 823, 827, 828, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 864, 865, 866, 867, 874, 953, 956, 978, 994, 995, 1033, 1055, 1061, 1066, 1067, 1068, 1070, 1286, 1287, 1288, 1290, 1296, 1297, 1298, 1299, 1301, 1305, 1308, 1309, 1313, 1315, 1316, 1326, 1426, 1431, 1449, 1475, 1577, 1579, 1591, 1608, 1609, 1635, 1650, 1651, 1655, 1660, 1696, 1697, 1727, 1738]),
        Epic(number: 4, russName: "Сигналы регулятора", arrayNumbers: [15, 18, 33, 35, 38, 39, 45, 139, 140, 193, 194, 195, 196, 198, 199, 200, 202, 203, 205, 206, 207, 211, 212, 213, 216, 217, 218, 221, 222, 427, 428, 437, 875, 901, 955, 1024, 1281, 1282]),
        Epic(number: 5, russName: "Водитель, пассажир и пешеход, знаки, условность", arrayNumbers: [37, 62, 123, 125, 130, 204, 208, 260, 263, 334, 335, 390, 391, 471, 878, 879, 883, 884, 887, 888, 889, 891, 892, 893, 895, 896, 900, 902, 905, 906, 910, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 949, 961, 962, 1053, 1056, 1059, 1089, 1091, 1092, 1093, 1098, 1114, 1125, 1126, 1219, 1220, 1224, 1225, 1226, 1227, 1228, 1230, 1340, 1341, 1342, 1379, 1380, 1482, 1486, 1572]),
        Epic(number: 6, russName: "По специальному сигналу", arrayNumbers: [51, 161, 472, 873, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1026, 1028]),
        Epic(number: 7, russName: "Жилая зона, автобусный приоритет", arrayNumbers: [59, 266, 268, 503, 513, 515, 518, 519, 533, 534, 1050]), Epic(number: 8, russName: "Указательные знаки", arrayNumbers: [64, 370, 375, 1140, 1142, 1145, 1147, 1149, 1151, 1152, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1163, 1164, 1168, 1170, 1232]),
        Epic(number: 9, russName: "Неровности и условия движения", arrayNumbers: [79, 829, 999, 1000, 1001, 1069, 1318, 1321, 1322, 1325, 1327, 1328, 1330, 1331, 1332, 1336, 1337, 1338, 1339, 1484]),
        Epic(number: 10, russName: "Велосипед, мопед и вождение скота", arrayNumbers: [99, 163, 172, 173, 174, 188, 190, 246, 520, 521, 522, 524, 526, 527, 528, 535, 537, 806, 808, 809, 822, 826, 997, 1270, 1333, 1335]),
        Epic(number: 11, russName: "Железнодорожный переезд", arrayNumbers: [155, 162, 179, 180, 377, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 430, 431, 436, 440, 442, 444, 908]),
        Epic(number: 12, russName: "Информационно-указательные знаки", arrayNumbers: [187, 189, 192, 337, 484, 486, 488, 768, 770, 771, 774, 776, 777, 778, 779, 780, 782, 784, 785, 787, 789, 790, 792, 794, 796, 798, 799, 800, 912, 1234, 1236, 1238]),
        Epic(number: 13, russName: "Скорость движения", arrayNumbers: [224, 225, 226, 228, 229, 231, 232, 233, 235, 248, 250, 251, 257, 307, 354, 540, 898, 1158, 1271, 1273]),
        Epic(number: 14, russName: "Запрещающие знаки", arrayNumbers: [254, 255, 353, 545, 673, 675, 677, 679, 681, 683, 685, 687, 689, 691, 696, 697, 698, 699, 706, 708, 710, 712, 714, 716, 718, 722, 724, 726, 731, 732, 735, 737, 738, 740, 742, 745, 746, 749, 750, 751, 752, 754, 756, 758, 760, 762, 764, 766, 1102, 1262]),
        Epic(number: 15, russName: "Предупреждающие знаки", arrayNumbers: [256, 497, 601, 602, 605, 607, 610, 611, 614, 616, 618, 620, 622, 625, 628, 630, 631, 633, 635, 636, 638, 639, 640, 641, 645, 646, 647, 649, 650, 651, 652, 653]),
        Epic(number: 16, russName: "Обгон путем обхода встречного транспортного средства", arrayNumbers: [261, 262, 264, 265, 267, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 310, 311, 312, 313, 316, 424, 426, 432, 434, 438, 469, 492, 507, 508, 510, 885, 954]),
        Epic(number: 17, russName: "Перестань стоять", arrayNumbers: [292, 314, 315, 317, 320, 321, 322, 324, 326, 329, 330, 339, 342, 343, 345, 346, 348, 350, 352, 357, 358, 372, 373, 463, 475, 478, 479, 482, 485, 487, 495, 496, 499, 501, 803, 811, 886, 894, 957, 959, 1247, 1253, 1263, 1269]),
        Epic(number: 18, russName: "Светотехника, звуковой сигнал", arrayNumbers: [306, 328, 355, 403, 410, 411, 820, 830, 927, 929, 930, 931, 932, 933, 934, 935, 937, 965, 968, 969, 973, 974, 975, 976, 977, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 991, 993, 1306, 1314]),
        Epic(number: 19, russName: "Доставка, Люди, Груз", arrayNumbers: [325, 332, 333, 476, 571, 573, 574, 581, 585, 586, 587, 812, 813, 814, 815, 816, 845, 847, 849, 868, 869, 870, 946, 1065]),
        Epic(number: 20, russName: "Движение по шоссе", arrayNumbers: [336, 368, 378, 379, 401, 445, 447, 450, 451, 452, 453, 454, 456, 457, 458, 460]), Epic(number: 21, russName: "Сигнализация аварийного маяка", arrayNumbers: [344, 356, 569, 897, 964, 1030, 1032, 1037, 1038, 1039, 1040, 1041, 1042, 1045, 1047, 1049, 1086, 1087, 1088]),
        Epic(number: 22, russName: "Дорожная разметка", arrayNumbers: [347, 400, 876, 877, 948, 952, 1248, 1249, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261]),
        Epic(number: 23, russName: "Буксировка", arrayNumbers: [461, 539, 541, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 559, 560, 563, 566, 567, 570, 590]),
        Epic(number: 24, russName: "Медицинская помощь", arrayNumbers: [498, 500, 505, 543, 588, 592, 593, 596, 597, 598, 599, 600, 810, 871, 872, 890, 909, 913, 915, 966, 970, 1011, 1023, 1027, 1046, 1051, 1054, 1062, 1063, 1064, 1071, 1077, 1078, 1079, 1084, 1190, 1251, 1264, 1265, 1268, 1280, 1283, 1284]),
        Epic(number: 25, russName: "Тормозной путь, дистанция", arrayNumbers: [565, 860, 861, 862, 863, 899, 911, 1003, 1085, 1285, 1294, 1295, 1304, 1307, 1381, 1428, 1695, 1728]),
        Epic(number: 26, russName: "Знаки приоритета", arrayNumbers: [654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671]),
        Epic(number: 27, russName: "Административное право", arrayNumbers: [844, 1052, 1072, 1073, 1074, 1075, 1076, 1080, 1081, 1082, 1083, 1266, 1329, 1345, 1346, 1347, 1349, 1353, 1354, 1355, 1439, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1711, 1712, 1713, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723]),
        Epic(number: 28, russName: "Обучающий ход", arrayNumbers: [903, 1131, 1132, 1133, 1134, 1136, 1137, 1138]),
        Epic(number: 29, russName: "Знаки обслуживания", arrayNumbers: [1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1240]),
        Epic(number: 30, russName: "Дополнительные информационные знаки", arrayNumbers: [1193, 1196, 1198, 1199, 1201, 1203, 1205, 1208, 1211, 1213, 1215, 1216, 1239, 1241, 1242, 1243, 1244, 1245, 1246]),
        Epic(number: 31, russName: "Эко-менеджмент", arrayNumbers: [1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792])]
    
    var epicQwestions: [EpicWithQwestion] = []
}

extension String {

    //right is the first encountered string after left
    func between(_ left: String, _ right: String) -> String? {
        guard let leftRange = range(of: left), let rightRange = range(of: right, options: .backwards)
            ,leftRange.upperBound <= rightRange.lowerBound else { return nil }

        let sub = self[leftRange.upperBound...]
        let closestToLeftRange = sub.range(of: right)!
        return String(sub[..<closestToLeftRange.lowerBound])
    }

}

extension Array where Element: Equatable {
    var onlyUniqValues: [Element] {
        var returnArray = [Element]()
        
        for obj in self {
            if returnArray.contains(where: { $0 == obj }) == false{
                returnArray.append(obj)
            }
        }
        
        return returnArray
    }
}
