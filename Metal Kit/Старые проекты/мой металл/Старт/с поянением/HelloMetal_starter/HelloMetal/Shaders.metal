

#include <metal_stdlib>
using namespace metal;

//4,1
//этот файл шердер
//Ше́йдер компьютерная программа, предназначенная для исполнения процессорами видеокарты (GPU).
//приимер ниже шейдер для вершин написанный на языке похожим на с++

//вершинный шейдер должен начинаться с ключ слова vertex, float4 говорит что будет возвращено значение типа [0.00001, 0.25, 10, 1]
//четвертый параметр это коеф

vertex float4 basic_vertex(
    //Первый вх параметр - это указатель на массив
    //Используйте [[ ... ]]синтаксис для объявления атрибутов, которые вы можете использовать для указания дополнительной информации
    //такой как расположение ресурсов
    const device packed_float3 * vertex_array [[ buffer(0) ]],
    //конкретный индекс в массиве, если это вершинный шейдер то он должен быть vertex_id
    unsigned int vid [[ vertex_id ]]) {
  return float4(vertex_array[vid], 1.0); //ну и возвращаем
}

// 5,1
//это шейдер фрагмента те контент между шейдером вершин
//начинается с ключевого слова fragment



fragment half4 basic_fragment() {
  //Функция должна возвращать (как минимум) окончательный цвет фрагмента.
  //Вы делаете это здесь, указывая half4(четырехкомпонентное значение цвета RGBA).
  //Обратите внимание, что half4это более эффективно использует память, чем float4потому, что вы пишете на меньшее количество памяти GPU.
  //Здесь вы возвращаете (1, 1, 1, 1)
  return half4(1.0);
}
