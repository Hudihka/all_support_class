//
//  TestKinozal.swift
//  test
//
//  Created by Худышка К on "0"2."0"2.2"0"22.
//

import Foundation

struct Plase {
    let xCord: Int
    let yCord: Int
}

final class TestKinozal {
    private let arrays =
    [
    ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "-", "-", "-"],
    ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "-", "-", "-"],
    ["0", "0", "-", "0", "-", "-", "-", "-", "-", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "-", "-", "-"],
    ["0", "0", "0", "0", "-", "-", "-", "-", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
    ["0", "-", "0", "0", "-", "-", "-", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
    ["0", "-", "0", "0", "-", "-", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "-", "0", "0", "0", "0", "0"],
    ["0", "-", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "-", "0", "0", "-", "0", "0"],
    ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "-", "-", "0", "0", "0", "0"],
    ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "-", "0", "0", "0", "0", "-"],
    ]
    
    var arrayEmpty: [Plase] = []
    var arrayNotEmpty: [Plase] = []
    
    func initArray() {
        arrays.enumerated().forEach { value in
            value.element.enumerated().forEach { liter in
                
                let please = Plase(xCord: liter.offset, yCord: value.offset)
                liter.element == "-" ? self.arrayNotEmpty.append(please) : self.arrayNotEmpty.append(please)
                
                
            }
        }
    }
    
    
}
